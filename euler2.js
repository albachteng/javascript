



/* prompt: Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.*/ 

const euler2 = function() {
    let fib = [1, 2]; // initialize array with the first two fibonacci numbers
// stop when the last array value is 4000000 or greater
// our iterator must start at 2 since the first two array items are already initialized
    for (let i = 2; fib[i - 1] < 4000000; i++) { // i is the fib array index
        // next number is the sum of the previous two fib numbers in the array
        fib.push(fib[i - 1] + fib[i - 2]);
    }
// initialize a counter
// iterate through fib: if the value is even, add it to the counter
    let counter = 0;
    fib.forEach(value => {
        if (value % 2 == 0) {
            counter+= value;
        }
    })
    return counter; 
}

console.log(euler2());